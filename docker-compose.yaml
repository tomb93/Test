version: "3"

services:
  #wordpress Service
  wordpress:
    container_name: wp_tpd
    links:
      - mysql:db_tpd
    build:
      context: ./docker/wordpress
    image: wp_tpd:v1.1
    restart: unless-stopped
    environment:
      - WORDPRESS_DB_HOST=db_tpd:3306
      - WORDPRESS_DB_USER=tomb
      - WORDPRESS_DB_PASSWORD=123
      - WORDPRESS_DB_NAME=db_tpd_test
    volumes:
      - "./src:/var/www/html"
      - "./docker/wordpress/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini"
    networks:
      - web-networks
  #Nginx Service
  nginx:
    container_name: webserver_tpd
    restart: unless-stopped
    build:
      context: ./docker/nginx
    image: wp_nginx_tpd:v1.1
    ports:
      - "80:80"
    networks:
      - web-networks
    links:
      - wordpress:wp_tpd
    volumes:
      - "./src:/var/www/html"
      - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
  #MySQL Service
  mysql:
    container_name: db_tpd
    restart: unless-stopped
    build:
      context: ./docker/mysql/.
      args:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    image: wp_database_tpd:v1.1
    command: ["--default-authentication-plugin=mysql_native_password"] # command to connect pass  server requested authentication
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ./docker/mysql/initdb:/docker-entrypoint-initdb.d
      - ./docker/mysql/database:/var/lib/mysql
    networks:
      - web-networks
networks:
  web-networks:
    driver: bridge
    name: docker-compose-wordpress_web-networks
volumes:
  certbot-etc:
  wordpress:
  dbdata:
